#include "../imports/stdlib.fc";

(int) int_eq_zero(int x) method_id {
    if (x == 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_neq_zero(int x) method_id {
    if (x != 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_gt_zero(int x) method_id {
    if (x > 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_ge_zero(int x) method_id {
    if (x >= 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_lt_zero(int x) method_id {
    if (x < 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_le_zero(int x) method_id {
    if (x <= 0) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_eq(int x, int y) method_id {
    if (x == y) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_neq(int x, int y) method_id {
    if (x != y) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_gt(int x, int y) method_id {
    if (x > y) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_ge(int x, int y) method_id {
    if (x >= y) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_lt(int x, int y) method_id {
    if (x < y) {
        return 1;
    } else {
        return 2;
    }
}

(int) int_le(int x, int y) method_id {
    if (x <= y) {
        return 1;
    } else {
        return 2;
    }
}

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }
    int op = in_msg_body~load_uint(32);
}
